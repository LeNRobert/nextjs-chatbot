"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-local-storage-state";
exports.ids = ["vendor-chunks/use-local-storage-state"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-local-storage-state/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/use-local-storage-state/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _src_useLocalStorageState_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/useLocalStorageState.js */ \"(ssr)/./node_modules/use-local-storage-state/src/useLocalStorageState.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_src_useLocalStorageState_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXNlLWxvY2FsLXN0b3JhZ2Utc3RhdGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUU7QUFDakUsaUVBQWUsb0VBQW9CLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMtY2hhdGJvdC1hcHAvLi9ub2RlX21vZHVsZXMvdXNlLWxvY2FsLXN0b3JhZ2Utc3RhdGUvaW5kZXguanM/OWY2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXNlTG9jYWxTdG9yYWdlU3RhdGUgZnJvbSAnLi9zcmMvdXNlTG9jYWxTdG9yYWdlU3RhdGUuanMnO1xuZXhwb3J0IGRlZmF1bHQgdXNlTG9jYWxTdG9yYWdlU3RhdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-local-storage-state/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/use-local-storage-state/src/useLocalStorageState.js":
/*!**************************************************************************!*\
  !*** ./node_modules/use-local-storage-state/src/useLocalStorageState.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ useLocalStorageState),\n/* harmony export */   inMemoryData: () => (/* binding */ inMemoryData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n// in memory fallback used then `localStorage` throws an error\nconst inMemoryData = new Map();\nfunction useLocalStorageState(key, options) {\n    const [defaultValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(options === null || options === void 0 ? void 0 : options.defaultValue);\n    // SSR support\n    // - on the server, return a constant value\n    // - this makes the implementation simpler and smaller because the `localStorage` object is\n    //   `undefined` on the server\n    if (typeof window === 'undefined') {\n        return [\n            defaultValue,\n            () => { },\n            {\n                isPersistent: true,\n                removeItem: () => { },\n            },\n        ];\n    }\n    const serializer = options === null || options === void 0 ? void 0 : options.serializer;\n    // disabling ESLint because the above if statement can be executed only on the server. the value\n    // of `window` can't change between calls.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useBrowserLocalStorageState(key, defaultValue, options === null || options === void 0 ? void 0 : options.storageSync, serializer === null || serializer === void 0 ? void 0 : serializer.parse, serializer === null || serializer === void 0 ? void 0 : serializer.stringify);\n}\nfunction useBrowserLocalStorageState(key, defaultValue, storageSync = true, parse = parseJSON, stringify = JSON.stringify) {\n    // store default value in localStorage:\n    // - initial issue: https://github.com/astoilkov/use-local-storage-state/issues/26\n    //   issues that were caused by incorrect initial and secondary implementations:\n    //   - https://github.com/astoilkov/use-local-storage-state/issues/30\n    //   - https://github.com/astoilkov/use-local-storage-state/issues/33\n    if (!inMemoryData.has(key) &&\n        defaultValue !== undefined &&\n        goodTry(() => localStorage.getItem(key)) === null) {\n        // reasons for `localStorage` to throw an error:\n        // - maximum quota is exceeded\n        // - under Mobile Safari (since iOS 5) when the user enters private mode\n        //   `localStorage.setItem()` will throw\n        // - trying to access localStorage object when cookies are disabled in Safari throws\n        //   \"SecurityError: The operation is insecure.\"\n        goodTry(() => localStorage.setItem(key, stringify(defaultValue)));\n    }\n    // we keep the `parsed` value in a ref because `useSyncExternalStore` requires a cached version\n    const storageValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n        item: null,\n        parsed: defaultValue,\n    });\n    const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((onStoreChange) => {\n        const onChange = (localKey) => {\n            if (key === localKey) {\n                onStoreChange();\n            }\n        };\n        callbacks.add(onChange);\n        return () => {\n            callbacks.delete(onChange);\n        };\n    }, [key]), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    () => {\n        var _a;\n        const item = (_a = goodTry(() => localStorage.getItem(key))) !== null && _a !== void 0 ? _a : null;\n        if (inMemoryData.has(key)) {\n            storageValue.current = {\n                item,\n                parsed: inMemoryData.get(key),\n            };\n        }\n        else if (item !== storageValue.current.item) {\n            let parsed;\n            try {\n                parsed = item === null ? defaultValue : parse(item);\n            }\n            catch (_b) {\n                parsed = defaultValue;\n            }\n            storageValue.current = {\n                item,\n                parsed,\n            };\n        }\n        return storageValue.current.parsed;\n    }, \n    // istanbul ignore next\n    () => defaultValue);\n    const setState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newValue) => {\n        const value = newValue instanceof Function ? newValue(storageValue.current.parsed) : newValue;\n        // reasons for `localStorage` to throw an error:\n        // - maximum quota is exceeded\n        // - under Mobile Safari (since iOS 5) when the user enters private mode\n        //   `localStorage.setItem()` will throw\n        // - trying to access `localStorage` object when cookies are disabled in Safari throws\n        //   \"SecurityError: The operation is insecure.\"\n        try {\n            localStorage.setItem(key, stringify(value));\n            inMemoryData.delete(key);\n        }\n        catch (_a) {\n            inMemoryData.set(key, value);\n        }\n        triggerCallbacks(key);\n    }, [key, stringify]);\n    // - syncs change across tabs, windows, iframes\n    // - the `storage` event is called only in all tabs, windows, iframe's except the one that\n    //   triggered the change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        if (!storageSync) {\n            return undefined;\n        }\n        const onStorage = (e) => {\n            if (e.storageArea === goodTry(() => localStorage) && e.key === key) {\n                triggerCallbacks(key);\n            }\n        };\n        window.addEventListener('storage', onStorage);\n        return () => window.removeEventListener('storage', onStorage);\n    }, [key, storageSync]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => [\n        value,\n        setState,\n        {\n            isPersistent: value === defaultValue || !inMemoryData.has(key),\n            removeItem() {\n                goodTry(() => localStorage.removeItem(key));\n                inMemoryData.delete(key);\n                triggerCallbacks(key);\n            },\n        },\n    ], [key, setState, value, defaultValue]);\n}\n// notifies all instances using the same `key` to update\nconst callbacks = new Set();\nfunction triggerCallbacks(key) {\n    for (const callback of [...callbacks]) {\n        callback(key);\n    }\n}\n// a wrapper for `JSON.parse()` that supports \"undefined\" value. otherwise,\n// `JSON.parse(JSON.stringify(undefined))` returns the string \"undefined\" not the value `undefined`\nfunction parseJSON(value) {\n    return value === 'undefined' ? undefined : JSON.parse(value);\n}\nfunction goodTry(tryFn) {\n    try {\n        return tryFn();\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-local-storage-state/src/useLocalStorageState.js\n");

/***/ })

};
;